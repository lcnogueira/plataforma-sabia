on: [pull_request]

name: CI
jobs:
  tests:
    name: WEB and API tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [14.x]
        os: ["ubuntu-latest"]

    services:
      plataforma-sabia-redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      plataforma-sabia-mysql:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: ""
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: sabia_testing
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore project dependencies from cache
        uses: actions/cache@v2
        id: project_dependencies_cache
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.project_dependencies_cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Run ESLint
        uses: reviewdog/action-eslint@v1
        with:
          fail_on_error: true

      - name: Setup API environments
        working-directory: packages/api
        run: cp .env.testing .env

      - name: Run API tests
        working-directory: packages/api
        run: npm run coverage

      - name: Run WEB tests
        working-directory: packages/web
        run: npm run jest:ci

      - name: Prepare coverages
        run: npm run merge-coverage

      - name: Run Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token  }}
  cypress:
    name: E2E tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [14.x]
        os: ["ubuntu-latest"]
    services:
      plataforma-sabia-redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      plataforma-sabia-mysql:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: ""
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: sabia_testing
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare API for e2e tests
        working-directory: packages/api
        run: |
          cp .env.testing .env
          npm ci
          npm run migration:refresh
          npm run seed

      - name: Run Cypress tests
        uses: cypress-io/github-action@v2
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        with:
          command: npm run test:e2e:run
          browser: chrome
