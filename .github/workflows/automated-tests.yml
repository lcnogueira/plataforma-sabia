on: [pull_request]

name: CI

jobs:
  web:
    name: WEB tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [14.x]
        os: ["ubuntu-latest"]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore dependencies from cache
        uses: actions/cache@v2
        id: web_dependencies_cache
        with:
          path: |
            **/web/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/web/package-lock.json') }}

      - name: Install dependencies
        if: steps.web_dependencies_cache.outputs.cache-hit != 'true'
        working-directory: packages/web
        run: npm install

      - name: Run WEB tests
        working-directory: packages/web
        run: npm run jest:ci

      - name: Zip coverage data
        working-directory: packages/web
        run: zip -r coverage.zip ./coverage/ 

      - name: Upload coverage data
        uses: actions/upload-artifact@v2
        with:
          name: web_coverage
          path: |
            **/web/coverage.zip
          retention-days: 2
  api: 
    name: API tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [14.x]
        os: ["ubuntu-latest"]

    services:
      plataforma-sabia-redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      plataforma-sabia-mysql:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: ""
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: sabia_testing
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore dependencies from cache
        uses: actions/cache@v2
        id: api_dependencies_cache
        with:
          path: |
            **/api/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/api/package-lock.json') }}

      - name: Install dependencies
        if: steps.api_dependencies_cache.outputs.cache-hit != 'true'
        working-directory: packages/api
        run: npm install

      - name: Setup API environments
        working-directory: packages/api
        run: cp .env.testing .env

      - name: Run API tests
        working-directory: packages/api
        run: npm run coverage

      - name: Zip coverage data
        working-directory: packages/api
        run: zip -r coverage.zip ./.nyc_output 

      - name: Upload coverage data
        uses: actions/upload-artifact@v2
        with:
          name: api_coverage
          path: |
            **/api/coverage.zip
          retention-days: 2
  # cypress:
  #   name: E2E tests
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       node-version: [14.x]
  #       os: ["ubuntu-latest"]
  #   services:
  #     plataforma-sabia-redis:
  #       image: redis
  #       ports:
  #         - 6379:6379
  #       options: >-
  #         --health-cmd "redis-cli ping"
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5

  #     plataforma-sabia-mysql:
  #       image: mysql
  #       env:
  #         MYSQL_ROOT_PASSWORD: ""
  #         MYSQL_ALLOW_EMPTY_PASSWORD: true
  #         MYSQL_DATABASE: sabia_testing
  #       ports:
  #         - 3306:3306
  #       options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Prepare API for e2e tests
  #       working-directory: packages/api
  #       run: |
  #         cp .env.testing .env
  #         npm ci
  #         npm run migration:refresh
  #         npm run seed

  #     - name: Run Cypress tests
  #       uses: cypress-io/github-action@v2
  #       env:
  #         ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  #         CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  #       with:
  #         command: npm run test:e2e:run
  #         browser: chrome
